<% /**
*      Copyright (C) 2008 10gen Inc.
*
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/

core.modules.wiki.pieces.header_search();

if( !allowModule.wiki ) return;
var prefix = allowModule.wiki.prefix || "";

// determine the base url we are running under.
var base = request.getURI();
base = base.match( /^.*?wiki/ ) || '';
base += '/';

core.content.table();

head.push('<script type="text/javascript" src="/@@/yui/current/yuiloader/yuiloader-beta.js"></script>');
head.push('<script type="text/javascript">loader = new YAHOO.util.YUILoader();</script>');

var prefixRE = null;
if( prefix.length ) {
    var s = prefix.replace(/\./g, '\.');
    prefixRE = RegExp("^" + s);
}

var searchTable = new htmltable({
    ns : db.wiki,
    cols : [{ name: "name", isLink: true, searchWidth: 32, view: function(x) { return prefixRE?x.replace(prefixRE, ''):x; }},
            { name: "text", searchWidth: 60, view: function(x) { return x.toString().substring(0, 66).replace(/</g,"&lt;");}}],
    searchable: true,
    detail: function(obj){ return base + (prefixRE?obj.name.replace(prefixRE,''):obj.name); },
    });

if( prefixRE ) searchTable.filter = function(x) { return x.name.match(prefixRE); }

searchTable.dbview( searchTable.find({}, {name:1}) );

core.modules.wiki.pieces.footer_search();

%>
