<%
/* Generate PDF from wiki markup.
   On a wiki url add "?pdf=1" to exec this.
   Add "&debug=1" to debug.
*/

core.core.file();

//var doc = wikiPage.getParsedText();

var root = ("/tmp/"+Math.random()).replace(/\./, '_')
var fn = root + ".tex";

var s = "";
var pg = wikiPage;
var resultops = {};
while( 1 ) {
    s += pg.getParsedText("tex", resultops);
    if( resultops.stitch ) { 
	if( request.debug ) print( "  Stitch " + resultops.stitch + '\n' ); 
	pg = db.wiki.findOne( { name : resultops.stitch.replace(/\\/g, '') } );
	if( pg == null ) { 
	    print("Error: couldn't find wiki page to stitch: '" + resultops.stitch + "'");
	    return;
	}
	resultops.stitching = resultops.stitch;
	resultops.stitch = null;
	if( request.debug ) print("new resultops var:" + tojson(resultops)+'\n');
    }
    else
	break;
}

var texfile = File.create(s);

texfile.writeToLocalFile(fn);


var cmd = "latex -halt-on-error -no-shell-escape -output-format=pdf " + 
    "-output-directory=tmp/ " +
    " ." + fn;

if( request.debug ) print(cmd+'\n------------\n');

var res = sysexec(cmd);

var pdf = openFile(root+".pdf"); 

function cleanup() {
    if( request.debug ) print("\ncleanup() called, root:" + root + "\n");
    try { 
	openFile(root + ".pdf").remove(false);
	openFile(root + ".tex").remove(false);
	openFile(root + ".log").remove(false);
	openFile(root + ".aux").remove(false);
    }
    catch(e) { 
	if( request.debug ) print("cleanup exception " + tojson(e) + "\n");
    }
}

if ( !pdf.exists() ) {
    response.setHeader("Content-Type", "text/plain");
    print("Error rendering document. Latex output follows.\n\n");
    print(res.err);
    print(res.out);
    if( !request.debug ) {
	cleanup();
	return;
    }
    print("---------------------\n");
}

if( request.debug ) { 
    response.setHeader("Content-Type", "text/plain");
    print(s);
    cleanup();
    return;
}

response.afterSendingCall( cleanup );

response.setHeader("Content-Type", "application/pdf");
response.sendFile(pdf);

%>
