<%
    /* determine the base url we are running under.
    */

    var uri = request.getURI();

    // This should be moved to a general handler for all modules
    if( request.getURI().indexOf('~') >= 0 ) {
        // only allowed if we remapped the url.  otherwise security would be bypassed
        print("module error 2");
        return;
    }

    var base = request.getURI().match( /^.*?wiki\// );
    if( !base && request.getURI().match(/wiki/) ) {
        response.setResponseCode( 302 );
        response.setHeader( "Location" , uri.match(/^.*wiki/) + '/' );
        return;
    }

    //request.applyServletParams( /wiki\/([^\/]+)/ , [ "name" ] );

    // Get the name of the page we are supposed to display. Assume we want the Main page if no page name is provided
    var displayName = request.name;
    if (!displayName) displayName = "Main";

    // Construct the full name of the page if we have a prefix defined for this instance
    var name = displayName;

    if ( app.wiki.config.prefix && ! displayName.match( "^" + app.wiki.config.prefix ) )
        name = app.wiki.config.prefix + displayName;

    // Get the actual wiki page. If there is no page with the given name, create a new page
    var wikiPage = db.wiki.findOne( { name : name } );
    if (!wikiPage) wikiPage = new app.wiki.WikiPage(name);

    // Check to see if we have been asked for an historical version of this wiki page
    var wikiPageHistoricalVersion;
    if (request.version) {
        wikiPageHistoricalVersion = wikiPage.getWikiPageHistory(request.version);
        if (request.diff == "true") {
            wikiPageShowDiff = true;
        }
    }

    if ( ! app.wiki.config.readOnly ){
        if (request['rename'] ) {
            app.wiki.WikiController.renamePage(wikiPage, request.newName);
        }
        else if ( request['delete']  ) {
            app.wiki.WikiController.deletePage(wikiPage);
        }
        else if (request['update'] ) {
            log(tojson(request));
            wikiPage.setText(request.wikitext.replace(/\r?\n/g, "\n"));
        }
    }

    if ( request.edit )
            core.app.wiki.pieces.edit();
    else if ( request.history )
            core.app.wiki.pieces.history();
    else if ( request.compare )
        core.app.wiki.pieces.compare();
    else
            core.app.wiki.pieces.view();
%>
